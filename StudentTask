#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

class Student {
private:
    int studentMarks[6][5];
    int searchMark;
public:
    Student() {
        srand(time(NULL));
        for (int row = 0; row < 6; row++) {
            for (int col = 0; col < 5; col++) {
                studentMarks[row][col] = rand() % 30 + 1;
            }
        }
    }

    void getMarks() {
        for (int row = 0; row < 6; row++) {
            for (int col = 0; col < 5; col++) {
                cout << studentMarks[row][col] << " ";
            }
            cout << endl;
        }
    }

    void sortMarks() {
        int tmp;
        for (int row = 0; row < 6; ++row) {
            for (int col = 0; col < 5; ++col) {
                for (int iter = 0; iter < 4 - col; ++iter) {
                    if (studentMarks[row][iter] > studentMarks[row][iter + 1]) {
                        tmp = studentMarks[row][iter];
                        studentMarks[row][iter] = studentMarks[row][iter + 1];
                        studentMarks[row][iter + 1] = tmp;
                    }
                }
            }
        }
    }

    void getSorted() {
        cout << "Sorted Student Marks:" << endl;
        for (int row = 0; row < 6; ++row) {
            cout << "Student " << row + 1 << ": ";
            for (int col = 0; col < 5; ++col) {
                cout << studentMarks[row][col] << "\t";
            }
            cout << endl;
        }
    }

    void findMaxMarks() {
        int maxMarks[6];
        for (int row = 0; row < 6; ++row) {
            maxMarks[row] = studentMarks[row][0];
            for (int col = 1; col < 5; ++col) {
                if (studentMarks[row][col] > maxMarks[row]) {
                    maxMarks[row] = studentMarks[row][col];
                }
            }
        }

        cout << "Max Marks:" << endl;
        for (int row = 0; row < 6; ++row) {
            cout << "Student " << row + 1 << ": " << maxMarks[row] << endl;
        }
    }

    void calculateMarks(int maxMarks[]) {
        int sum = 0;
        int count = 0;

        for (int row = 0; row < 6; ++row) {
            for (int col = 0; col < 5; ++col) {
                if (studentMarks[row][col] != maxMarks[row]) {
                    sum += studentMarks[row][col];
                    count++;
                }
            }
        }

        cout << "Sum of marks without max marks: " << sum << endl;
        cout << "Count of marks without max marks: " << count << endl;
        cout << "Average in studentMarks: " << (float)sum / count << endl;
    }

    void setSearchMark(int mark) {
        searchMark = mark;
    }

    void hasDuplicates() {
        bool found = false;
        for (int row = 0; row < 6; ++row) {
            for (int col = 0; col < 5; ++col) {
                if (studentMarks[row][col] == searchMark) {
                    cout << "Duplicate found at Student " << row + 1 << ", Index " << col << endl;
                    found = true;
                }
            }
        }
        if (!found) {
            cout << "No duplicates found for the search mark " << searchMark << "." << endl;
        }
    }
};

int main() {
    Student student;
    student.getMarks();
    student.sortMarks();
    cout << endl;
    student.getSorted();
    cout << endl;
    student.findMaxMarks();

    cout << endl;
    int searchMark;
    cout << "Enter a mark to search for duplicates: ";
    cin >> searchMark;
    student.setSearchMark(searchMark);
    student.hasDuplicates();

    return 0;
}

